import{_ as s,c as a,o as t,P as e}from"./chunks/framework.BJ8jxmnT.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/work/面试题分类/1.html总结.md","filePath":"articles/work/面试题分类/1.html总结.md","lastUpdated":1745721665000}'),l={name:"articles/work/面试题分类/1.html总结.md"};function h(n,i,p,o,d,k){return t(),a("div",null,i[0]||(i[0]=[e(`<h2 id="html" tabindex="-1">HTML <a class="header-anchor" href="#html" aria-label="Permalink to &quot;HTML&quot;">​</a></h2><h2 id="_1、doctype有什么作用" tabindex="-1">1、DOCTYPE有什么作用？ <a class="header-anchor" href="#_1、doctype有什么作用" aria-label="Permalink to &quot;1、DOCTYPE有什么作用？&quot;">​</a></h2><p>DOCTYPE是一种指示浏览器以何种HTML或XHTML规范来解析文档的声明。它能够告知浏览器网页文档使用的标记语言的类型以及版本，从而确保浏览器能够正确地展示网页内容。DOCTYPE声明通常位于HTML文档的开头，是HTML文档的必须部分。</p><h2 id="_2、img标签的title和alt属性有什么区别" tabindex="-1">2、img标签的title和alt属性有什么区别 <a class="header-anchor" href="#_2、img标签的title和alt属性有什么区别" aria-label="Permalink to &quot;2、img标签的title和alt属性有什么区别&quot;">​</a></h2><p><code>alt</code>属性用于为图像提供替代文本，即使图像无法加载，也可以描述图像内容，提高网页的可访问性和可用性。<code>title</code>属性则提供有关图像的额外信息，可以通过鼠标悬停或使用辅助技术来查看。它通常用于提供更多的上下文或补充描述，但并不是必需的。</p><h2 id="_3、简述一下src与href的区别" tabindex="-1">3、简述一下src与href的区别 <a class="header-anchor" href="#_3、简述一下src与href的区别" aria-label="Permalink to &quot;3、简述一下src与href的区别&quot;">​</a></h2><p>在 HTML 中，<code>src</code> 属性是用来指定外部资源的 URL，如图像、脚本或嵌入式对象的位置。例如，<code>&lt;img&gt;</code> 标签中的 <code>src</code> 属性指定图像的 URL。</p><p>而 <code>href</code> 属性则用来指定超文本链接的目标资源的位置，如超链接或 <code>link</code> 标记中的外部样式表。例如，<code>&lt;a&gt;</code> 标签中的 <code>href</code> 属性指定了链接目标的 URL。</p><h2 id="_4、iframe有哪些优缺点" tabindex="-1">4、iframe有哪些优缺点？ <a class="header-anchor" href="#_4、iframe有哪些优缺点" aria-label="Permalink to &quot;4、iframe有哪些优缺点？&quot;">​</a></h2><p><code>iframe</code>（内联框架）是一种 HTML 元素，它允许在当前文档中嵌入另一个独立的 HTML 文档。<code>iframe</code> 有一些优点和缺点：</p><p>优点：</p><ol><li><strong>内容隔离</strong>：<code>iframe</code> 可以将不同来源的内容隔离开来，使得它们在不同的上下文中运行。这有助于保护当前文档免受潜在的安全风险，并确保不同来源的内容不会互相干扰。</li><li><strong>异步加载</strong>：<code>iframe</code> 中的内容可以异步加载，这意味着页面主体内容可以在 <code>iframe</code> 加载完成之前呈现。这有助于提高页面加载速度。</li><li><strong>独立滚动</strong>：<code>iframe</code> 内的内容可以独立滚动，而不会影响主页面的滚动。这有助于在需要展示大量内容的情况下，提高用户体验。</li><li><strong>跨域资源访问</strong>：在一定程度上，<code>iframe</code> 可以用于访问跨域资源，例如嵌入来自其他域的网页或应用。</li></ol><p>缺点：</p><ol><li><strong>性能影响</strong>：<code>iframe</code> 的使用可能会导致性能下降，因为它需要浏览器加载额外的文档资源。每个嵌入的 <code>iframe</code> 都需要额外的 HTTP 请求，这可能会延长页面加载时间。</li><li><strong>复杂性增加</strong>：<code>iframe</code> 的使用可能会使页面结构更加复杂，导致维护困难。而且，在 <code>iframe</code> 和主页面之间进行通信可能会涉及到跨域问题，这会增加开发难度。</li><li><strong>SEO 不友好</strong>：搜索引擎可能无法完全索引 <code>iframe</code> 中的内容，这会影响到网页的搜索引擎优化（SEO）。</li><li><strong>可访问性问题</strong>：<code>iframe</code> 在某些情况下可能导致可访问性问题。例如，屏幕阅读器可能无法正确解析 <code>iframe</code> 中的内容，导致部分用户无法访问这些内容。</li></ol><p>综上所述，<code>iframe</code> 有一些优点，如内容隔离、异步加载和独立滚动等。然而，它也有一些缺点，如性能影响、复杂性增加、SEO 不友好和可访问性问题等。在使用 <code>iframe</code> 时，需要权衡这些优缺点，确保它适用于你的需求。</p><h2 id="_5、常用的meta标签有哪些" tabindex="-1">5、常用的meta标签有哪些？ <a class="header-anchor" href="#_5、常用的meta标签有哪些" aria-label="Permalink to &quot;5、常用的meta标签有哪些？&quot;">​</a></h2><p><code>meta</code> 标签提供了有关 HTML 文档的元数据，如描述、关键词、作者等。以下是一些常用的 <code>meta</code> 标签：</p><ol><li><p><strong>字符集声明</strong>：声明文档使用的字符编码，通常为 UTF-8。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;UTF-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p><strong>视口设置</strong>：控制页面在移动设备上的显示方式，如缩放级别和页面宽度。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;viewport&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p><strong>页面描述</strong>：提供页面的简短描述，有助于搜索引擎了解页面内容。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;description&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A brief description of the page.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p><strong>关键词</strong>：设置页面关键词，有助于搜索引擎优化（SEO）。但请注意，大多数现代搜索引擎不再使用此标签。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;keywords&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;keyword1, keyword2, keyword3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p><strong>作者</strong>：指定页面作者。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;author&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Author Name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p><strong>禁止缓存</strong>：告诉浏览器不要缓存页面。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> http-equiv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Cache-Control&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;no-cache, no-store, must-revalidate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> http-equiv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Pragma&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;no-cache&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> http-equiv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Expires&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p><strong>自动刷新</strong>：设置页面在特定时间间隔后自动刷新。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> http-equiv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;refresh&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;30&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p><strong>跳转到其他页面</strong>：在指定的时间间隔后，自动将用户重定向到其他页面。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> http-equiv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;refresh&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;5; URL=https://example.com/new-page.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p><strong>兼容模式</strong>：指定浏览器（如 Internet Explorer）使用特定的渲染模式。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> http-equiv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;X-UA-Compatible&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;IE=edge&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p><strong>搜索引擎索引控制</strong>：指示搜索引擎是否应索引页面和跟踪链接。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;robots&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;index, follow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li></ol><p>这些常用的 <code>meta</code> 标签可以帮助你控制页面的显示、搜索引擎优化和其他功能。根据页面需求，可以根据需要添加更多的 <code>meta</code> 标签。</p><h2 id="_6、h5和h4有什么不同" tabindex="-1">6、H5和H4有什么不同？ <a class="header-anchor" href="#_6、h5和h4有什么不同" aria-label="Permalink to &quot;6、H5和H4有什么不同？&quot;">​</a></h2><ul><li>语义化标签: <code>header</code>、<code>footer</code>、<code>nav</code>、<code>section</code>、<code>article</code>、<code>aside</code> 等</li><li>增强型表单：<code>date</code>(从一个日期选择器选择一个日期) 、<code>email</code>(包含 e-mail 地址的输入域) 、<code>number</code>(数值的输入域) 、<code>range</code>(一定范围内数字值的输入域) 、<code>search</code>(用于搜索域) 、<code>tel</code>(定义输入电话号码字段) 等</li><li>视频和音频：<code>audio</code>、<code>video</code></li><li><code>Canvas</code>绘图、 <code>SVG</code>绘图</li><li>地理定位：<code>Geolocation</code></li><li>拖放API：<code>drag</code></li><li><code>web worker</code>：是运行在后台的 <code>JavaScript</code>，独立于其他脚本，不会影响页面的性能</li><li><code>web storage</code>: <code>localStorage</code>、<code>sessionStorage</code></li><li><code>WebSocket</code>: <code>HTML5</code> 开始提供的一种在单个 <code>TCP</code> 连接上进行全双工通讯的协议</li></ul><h2 id="_7、svg和canvas的区别" tabindex="-1">7、SVG和CANVAS的区别？ <a class="header-anchor" href="#_7、svg和canvas的区别" aria-label="Permalink to &quot;7、SVG和CANVAS的区别？&quot;">​</a></h2><p>SVG和Canvas都是用于在web上绘制图形的技术，但它们有几个主要区别:</p><ol><li>SVG是基于矢量图的，而Canvas是基于像素图的。</li><li>在SVG中，每个绘制的元素都是一个独立的DOM对象，并且可以轻松地与JavaScript交互。 在Canvas中，所有绘制都被放置在一个画布中，并且只能与像素级别进行交互。</li><li>SVG通常适用于静态图形，而Canvas适用于动态图形，例如游戏和数据可视化。</li></ol><p>简而言之，SVG适用于需要与DOM交互并具有复杂动画和交互的情况，而Canvas则适用于创建大量图形对象和复杂动画。</p><h2 id="_8、defer-和-async-的区别" tabindex="-1">8、defer 和 async 的区别 ? <a class="header-anchor" href="#_8、defer-和-async-的区别" aria-label="Permalink to &quot;8、defer 和 async 的区别 ?&quot;">​</a></h2><p>defer 和 async 都是用于脚本加载和执行的关键字，两者的主要区别如下：</p><ol><li>defer 脚本会在 HTML 文档解析完成后执行，而 async 脚本会在下载完毕后立即执行。</li><li>defer 脚本会按照它们在文档中的顺序执行，而 async 脚本是在下载完成后尽快执行，可能会打乱它们在文档中的顺序。</li><li>defer 脚本会在 DOMContentLoaded 事件之后运行，而 async 脚本则不一定。</li></ol><p>因此，如果需要按顺序执行脚本并且不想阻塞 DOM 的解析，可以使用 defer。如果脚本的执行不依赖于其他脚本或 DOM，可以使用 async 加快加载速度。</p><h2 id="_9、style标签prefetch和preload区别" tabindex="-1">9、style标签prefetch和preload区别？ <a class="header-anchor" href="#_9、style标签prefetch和preload区别" aria-label="Permalink to &quot;9、style标签prefetch和preload区别？&quot;">​</a></h2><p><code>&lt;style&gt;</code>标签的 <code>prefetch</code>和 <code>preload</code>属性都用于优化CSS资源的加载，但它们有不同的行为和目的：</p><ul><li><code>prefetch</code>属性告诉浏览器这个CSS资源可能在未来的某个时刻需要被加载，但并不需要立即加载。浏览器会在空闲时间异步加载这个资源，以便在需要时能够立即使用。<code>prefetch</code>适用于那些当前不需要但是可能在未来会需要使用的资源。</li><li><code>preload</code>属性则告诉浏览器这个CSS资源在当前页面中必须被使用，因此应该立即加载和执行。浏览器会在主HTML文档下载和解析完成之前加载这个资源。<code>preload</code>适用于那些当前需要使用的资源。</li></ul><hr>`,33)]))}const E=s(l,[["render",h]]);export{c as __pageData,E as default};
