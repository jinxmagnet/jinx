import{_ as e,o as a,c as s,R as t}from"./chunks/framework.ka86hsJC.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/backend/gitLearn/其它工具/1.degit.md","filePath":"articles/backend/gitLearn/其它工具/1.degit.md","lastUpdated":1701168128000}'),n={name:"articles/backend/gitLearn/其它工具/1.degit.md"},i=t(`<blockquote><p><strong>degit</strong> makes copies of git repositories. When you run <code>degit some-user/some-repo</code>, it will find the latest commit on <a href="https://github.com/some-user/some-repo" target="_blank" rel="noreferrer">https://github.com/some-user/some-repo</a> and download the associated tar file to <code>~/.degit/some-user/some-repo/commithash.tar.gz</code> if it doesn&#39;t already exist locally. (This is much quicker than using <code>git clone</code>, because you&#39;re not downloading the entire git history.)</p><p><em>Requires Node 8 or above, because <code>async</code> and <code>await</code> are the cat&#39;s pyjamas</em></p></blockquote><p><a href="https://github.com/Rich-Harris/degit" target="_blank" rel="noreferrer">Rich-Harris/degit: Straightforward project scaffolding (github.com)</a></p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>npm install -g degit</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="basics" tabindex="-1">Basics <a class="header-anchor" href="#basics" aria-label="Permalink to &quot;Basics&quot;">​</a></h3><p>The simplest use of degit is to download the master branch of a repo from GitHub to the current working directory:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>degit user/repo</span></span>
<span class="line"><span></span></span>
<span class="line"><span># these commands are equivalent</span></span>
<span class="line"><span>degit github:user/repo</span></span>
<span class="line"><span>degit git@github.com:user/repo</span></span>
<span class="line"><span>degit https://github.com/user/repo</span></span></code></pre></div><p>Or you can download from GitLab and BitBucket:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># download from GitLab</span></span>
<span class="line"><span>degit gitlab:user/repo</span></span>
<span class="line"><span>degit git@gitlab.com:user/repo</span></span>
<span class="line"><span>degit https://gitlab.com/user/repo</span></span>
<span class="line"><span></span></span>
<span class="line"><span># download from BitBucket</span></span>
<span class="line"><span>degit bitbucket:user/repo</span></span>
<span class="line"><span>degit git@bitbucket.org:user/repo</span></span>
<span class="line"><span>degit https://bitbucket.org/user/repo</span></span>
<span class="line"><span></span></span>
<span class="line"><span># download from Sourcehut</span></span>
<span class="line"><span>degit git.sr.ht/user/repo</span></span>
<span class="line"><span>degit git@git.sr.ht:user/repo</span></span>
<span class="line"><span>degit https://git.sr.ht/user/repo</span></span></code></pre></div><h3 id="specify-a-tag-branch-or-commit" tabindex="-1">Specify a tag, branch or commit <a class="header-anchor" href="#specify-a-tag-branch-or-commit" aria-label="Permalink to &quot;Specify a tag, branch or commit&quot;">​</a></h3><p>The default branch is <code>master</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>degit user/repo#dev       # branch</span></span>
<span class="line"><span>degit user/repo#v1.2.3    # release tag</span></span>
<span class="line"><span>degit user/repo#1234abcd  # commit hash</span></span></code></pre></div><h3 id="create-a-new-folder-for-the-project" tabindex="-1">Create a new folder for the project <a class="header-anchor" href="#create-a-new-folder-for-the-project" aria-label="Permalink to &quot;Create a new folder for the project&quot;">​</a></h3><p>If the second argument is omitted, the repo will be cloned to the current directory.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>degit user/repo my-new-project</span></span></code></pre></div><h3 id="specify-a-subdirectory" tabindex="-1">Specify a subdirectory <a class="header-anchor" href="#specify-a-subdirectory" aria-label="Permalink to &quot;Specify a subdirectory&quot;">​</a></h3><p>To clone a specific subdirectory instead of the entire repo, just add it to the argument:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>degit user/repo/subdirectory</span></span></code></pre></div><h3 id="https-proxying" tabindex="-1">HTTPS proxying <a class="header-anchor" href="#https-proxying" aria-label="Permalink to &quot;HTTPS proxying&quot;">​</a></h3><p>If you have an <code>https_proxy</code> environment variable, Degit will use it.</p><h3 id="private-repositories" tabindex="-1">Private repositories <a class="header-anchor" href="#private-repositories" aria-label="Permalink to &quot;Private repositories&quot;">​</a></h3><p>Private repos can be cloned by specifying <code>--mode=git</code> (the default is <code>tar</code>). In this mode, Degit will use <code>git</code> under the hood. It&#39;s much slower than fetching a tarball, which is why it&#39;s not the default.</p><p>Note: this clones over SSH, not HTTPS.</p><h3 id="see-all-options" tabindex="-1">See all options <a class="header-anchor" href="#see-all-options" aria-label="Permalink to &quot;See all options&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>degit --help</span></span></code></pre></div><h2 id="not-supported" tabindex="-1">Not supported <a class="header-anchor" href="#not-supported" aria-label="Permalink to &quot;Not supported&quot;">​</a></h2><ul><li>Private repositories</li></ul><p>Pull requests are very welcome!</p><h2 id="wait-isn-t-this-just-git-clone-depth-1" tabindex="-1">Wait, isn&#39;t this just <code>git clone --depth 1</code>? <a class="header-anchor" href="#wait-isn-t-this-just-git-clone-depth-1" aria-label="Permalink to &quot;Wait, isn&#39;t this just \`git clone --depth 1\`?&quot;">​</a></h2><p>A few salient differences:</p><ul><li>If you <code>git clone</code>, you get a <code>.git</code> folder that pertains to the project template, rather than your project. You can easily forget to re-init the repository, and end up confusing yourself</li><li>Caching and offline support (if you already have a <code>.tar.gz</code> file for a specific commit, you don&#39;t need to fetch it again).</li><li>Less to type (<code>degit user/repo</code> instead of <code>git clone --depth 1 git@github.com:user/repo</code>)</li><li>Composability via <a href="https://github.com/Rich-Harris/degit#actions" target="_blank" rel="noreferrer">actions</a></li><li>Future capabilities — <a href="https://github.com/Rich-Harris/degit/issues/4" target="_blank" rel="noreferrer">interactive mode</a>, <a href="https://github.com/Rich-Harris/degit/issues/6" target="_blank" rel="noreferrer">friendly onboarding and postinstall scripts</a></li></ul><h2 id="javascript-api" tabindex="-1">JavaScript API <a class="header-anchor" href="#javascript-api" aria-label="Permalink to &quot;JavaScript API&quot;">​</a></h2><p>You can also use degit inside a Node script:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>const degit = require(&#39;degit&#39;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const emitter = degit(&#39;user/repo&#39;, {</span></span>
<span class="line"><span>	cache: true,</span></span>
<span class="line"><span>	force: true,</span></span>
<span class="line"><span>	verbose: true,</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span></span></span>
<span class="line"><span>emitter.on(&#39;info&#39;, info =&gt; {</span></span>
<span class="line"><span>	console.log(info.message);</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span></span></span>
<span class="line"><span>emitter.clone(&#39;path/to/dest&#39;).then(() =&gt; {</span></span>
<span class="line"><span>	console.log(&#39;done&#39;);</span></span>
<span class="line"><span>});</span></span></code></pre></div><h2 id="actions" tabindex="-1">Actions <a class="header-anchor" href="#actions" aria-label="Permalink to &quot;Actions&quot;">​</a></h2><p>You can manipulate repositories after they have been cloned with <em>actions</em>, specified in a <code>degit.json</code> file that lives at the top level of the working directory. Currently, there are two actions — <code>clone</code> and <code>remove</code>. Additional actions may be added in future.</p><h3 id="clone" tabindex="-1">clone <a class="header-anchor" href="#clone" aria-label="Permalink to &quot;clone&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// degit.json</span></span>
<span class="line"><span>[</span></span>
<span class="line"><span>	{</span></span>
<span class="line"><span>		&quot;action&quot;: &quot;clone&quot;,</span></span>
<span class="line"><span>		&quot;src&quot;: &quot;user/another-repo&quot;</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>]</span></span></code></pre></div><p>This will clone <code>user/another-repo</code>, preserving the contents of the existing working directory. This allows you to, say, add a new README.md or starter file to a repo that you do not control. The cloned repo can contain its own <code>degit.json</code> actions.</p><h3 id="remove" tabindex="-1">remove <a class="header-anchor" href="#remove" aria-label="Permalink to &quot;remove&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// degit.json</span></span>
<span class="line"><span>[</span></span>
<span class="line"><span>	{</span></span>
<span class="line"><span>		&quot;action&quot;: &quot;remove&quot;,</span></span>
<span class="line"><span>		&quot;files&quot;: [&quot;LICENSE&quot;]</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>]</span></span></code></pre></div><p>Remove a file at the specified path.s</p>`,43),o=[i];function p(r,l,c,d,h,u){return a(),s("div",null,o)}const m=e(n,[["render",p]]);export{b as __pageData,m as default};
