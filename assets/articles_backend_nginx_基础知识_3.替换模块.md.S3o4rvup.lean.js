import{_ as i,c as a,o as e,P as n}from"./chunks/framework.BJ8jxmnT.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{"author":"coder-li","tags":"nginx/modules/sub_module","aliases":"nginx替换模块"},"headers":[],"relativePath":"articles/backend/nginx/基础知识/3.替换模块.md","filePath":"articles/backend/nginx/基础知识/3.替换模块.md","lastUpdated":1745721740000}'),t={name:"articles/backend/nginx/基础知识/3.替换模块.md"};function p(l,s,r,d,c,h){return e(),a("div",null,s[0]||(s[0]=[n(`<p>也是在server块中进行配置 例如要讲主页中的<code>coder</code>全部替换为<code>coder-coder</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	sub_filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> coder</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;coder-coder&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	sub_filter_once</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#默认是on，表示只替换一次</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>配置前： <img src="https://cdn.jsdelivr.net/gh/lijing-2008/PicGo/img/20220112164836.png" alt=""></p><p>配置后： <img src="https://cdn.jsdelivr.net/gh/lijing-2008/PicGo/img/20220112165526.png" alt=""></p><p>如果配置后没效果，可能是浏览器缓存的问题，新开一个private窗口就行</p>`,5)]))}const g=i(t,[["render",p]]);export{k as __pageData,g as default};
