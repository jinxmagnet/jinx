import{_ as e,o as t,c as n,k as s,t as l,R as i}from"./chunks/framework.gdc2w2R7.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/work/面试题分类/8.MVVM框架.md","filePath":"articles/work/面试题分类/8.MVVM框架.md","lastUpdated":1703140300000}'),p={name:"articles/work/面试题分类/8.MVVM框架.md"},h=i("",95),k=s("li",null,"手动实例化：当需要手动监控某个表达式或计算属性时，可以创建一个 Watcher 对象。例如，在 Vue 组件中，可以使用 vm.$watch() 方法创建一个 Watcher 对象以监听某个数据属性或计算属性的变化。",-1),r=i("",257);function o(a,d,E,c,g,u){return t(),n("div",null,[h,s("ul",null,[s("li",null,"编译模板：在编译模板时，Vue.js 解析模板中的指令（如 v-model、v-bind 等）和插值表达式（如 "+l(a.message)+"），为每个指令或表达式创建一个 Watcher 对象。这些 Watcher 对象负责监听数据变化并在数据发生变化时更新视图。",1),k]),r])}const C=e(p,[["render",o]]);export{F as __pageData,C as default};
