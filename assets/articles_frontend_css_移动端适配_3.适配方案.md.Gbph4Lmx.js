import{_ as s,o as i,c as a,R as l}from"./chunks/framework.gdc2w2R7.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/frontend/css/移动端适配/3.适配方案.md","filePath":"articles/frontend/css/移动端适配/3.适配方案.md","lastUpdated":1703140972000}'),e={name:"articles/frontend/css/移动端适配/3.适配方案.md"},n=l(`<blockquote><p>多种适配方案</p></blockquote><h2 id="一、rem-动态html的font-size" tabindex="-1">一、<code>rem+动态Html的font-size</code> <a class="header-anchor" href="#一、rem-动态html的font-size" aria-label="Permalink to &quot;一、\`rem+动态Html的font-size\`&quot;">​</a></h2><p><code>rem</code>单位相对于<code>html</code>元素的<code>font-size</code>来设置的，那么如果我们需要在不同的屏幕下有不同的尺寸，可以动态的修改<code>html</code>的<code>font-size</code>尺寸</p><ul><li>针对不同的屏幕，设置<code>html</code>不同的的<code>font-size</code></li><li>针对不同的尺寸，计算不同的<code>rem</code></li></ul><h3 id="基本方案" tabindex="-1">基本方案 <a class="header-anchor" href="#基本方案" aria-label="Permalink to &quot;基本方案&quot;">​</a></h3><ol><li>媒体查询</li></ol><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">min-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">375</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="2"><li><code>js</code>动态计算</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> htmlEl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.documentElement</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 屏幕宽度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resize&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> htmlWidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> htmlEl.clientWidth</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> htmlFontSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> htmlWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(htmlFontSize)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  htmlEl.style.fontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> htmlFontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;px&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><ol start="3"><li><code>lib-flexible</code></li></ol><p><a href="https://github.com/amfe/lib-flexible" target="_blank" rel="noreferrer">amfe/lib-flexible: 可伸缩布局方案 (github.com)</a></p><p>已经放弃使用了，用<code>vw</code>来替代了</p><h3 id="rem单位换算" tabindex="-1"><code>rem</code>单位换算 <a class="header-anchor" href="#rem单位换算" aria-label="Permalink to &quot;\`rem\`单位换算&quot;">​</a></h3><ul><li>手动计算</li><li><code>less/scss</code>混入</li></ul><div class="language-less vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.pxToRem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(@px){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  result: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (@px </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 37.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.pxToRem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.pxToRem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.pxToRem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><p><code>webpack</code>插件<code>postcss-pxtorem</code></p></li><li><p>使用编辑器插件</p><ul><li>vscode：px to rem</li><li>webstorm：px2rem</li></ul></li></ul><h2 id="二、使用vw" tabindex="-1">二、使用<code>vw</code> <a class="header-anchor" href="#二、使用vw" aria-label="Permalink to &quot;二、使用\`vw\`&quot;">​</a></h2><h3 id="_1-优点" tabindex="-1">1. 优点 <a class="header-anchor" href="#_1-优点" aria-label="Permalink to &quot;1. 优点&quot;">​</a></h3><ul><li>不需要计算html的font-size大小，也不需要给html设置这样一个font-size</li><li>不会因为设置了html的font-size大小，而必须给body再设置一个font-size，防止继承</li><li>因为不依赖font-size的尺寸，所以不用担心某些原因html的font-size被篡改，页面尺寸混乱</li><li>vw相比于rem更加语义化，1vw刚好就是1/100的viewport的大小</li><li>可以具备rem之前的所有优点</li></ul><p>相比于rem，现在更推荐使用vw</p><h3 id="_2-vw的换算方案" tabindex="-1">2. <code>vw</code>的换算方案 <a class="header-anchor" href="#_2-vw的换算方案" aria-label="Permalink to &quot;2. \`vw\`的换算方案&quot;">​</a></h3><p>类似<code>rem</code></p><ul><li>手动换算</li><li><code>less/scss</code></li><li><code>webpack</code>插件<code>postcss-px-to-viewport-8-plugin</code></li><li>编辑器插件，同<code>rem</code>，如下是<code>webstorm</code>下的<code>px2rem</code>插件</li></ul><p><img src="https://gitlab.com/lijing-2008/blogpic/-/raw/main/pictures/2023/01/3_20_15_38_image-20230103201538702.png" alt="image-20230103201538702"></p>`,24),t=[n];function h(p,k,d,r,o,E){return i(),a("div",null,t)}const y=s(e,[["render",h]]);export{g as __pageData,y as default};
